---
- name: Create Users in Azure with Group and Role Assignment
  hosts: localhost
  gather_facts: no
  vars:
    tenant_id: "195e8969-c853-47b4-83d0-36e044d83923"
    client_id: "e2e46ae3-2dee-4eed-a074-ddffd760ab2b"
    client_secret: "{{ client_secret }}"  # Pass this as an extra var when running the playbook
    graph_api_endpoint: "https://graph.microsoft.com/v1.0"
    
    # Define user information directly
    user_info:
      DisplayName: "John Doe"
      firstname: "John"
      lastname: "Doe"
      mailNickname: "jdoe"
      userPrincipalName: "jdoe@example.com"
      Password: "TemporaryP@ss123"  # Consider using Ansible Vault for passwords
      GroupName: "Sales Department"  # Optional
      GroupID: "12345678-1234-1234-1234-123456789012"  # Optional, will take precedence over GroupName

  tasks:
    - name: Get Azure access token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: azure_auth_response
      
    - name: Set Azure token
      set_fact:
        access_token: "{{ azure_auth_response.json.access_token }}"
        
    - name: Create user in Azure AD
      uri:
        url: "{{ graph_api_endpoint }}/users"
        method: POST
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: true
          displayName: "{{ user_info.DisplayName }}"
          surname: "{{ user_info.firstname | default('') }}"
          givenName: "{{ user_info.lastname | default('') }}"
          mailNickname: "{{ user_info.mailNickname }}"
          userPrincipalName: "{{ user_info.userPrincipalName }}"
          passwordProfile:
            forceChangePasswordNextSignIn: true
            password: "{{ user_info.Password }}"
        body_format: json
        return_content: yes
        status_code: [200, 201]
      register: create_user_response
      
    # Group assignment section
    - name: Get group ID by name if needed
      uri:
        url: "{{ graph_api_endpoint }}/groups?$filter=displayName eq '{{ user_info.GroupName }}'"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        return_content: yes
      register: group_lookup_response
      when: user_info.GroupID is not defined and user_info.GroupName is defined
      
    - name: Set group ID from lookup or direct input
      set_fact:
        group_id: "{% if user_info.GroupID is defined %}{{ user_info.GroupID | trim }}{% elif user_info.GroupName is defined and group_lookup_response.json.value | length > 0 %}{{ group_lookup_response.json.value[0].id | trim }}{% else %}{% endif %}"
      when: user_info.GroupID is defined or user_info.GroupName is defined
      
    - name: Add user to Azure AD group
      uri:
        url: "{{ graph_api_endpoint }}/groups/{{ group_id | trim }}/members/$ref"
        method: POST
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          "@odata.id": "{{ graph_api_endpoint }}/directoryObjects/{{ create_user_response.json.id }}"
        body_format: json
        status_code: [204]
      register: add_to_group_response
      when: create_user_response is defined and create_user_response.status in [200, 201] and group_id is defined and group_id | trim != ""
      ignore_errors: yes
      
    # Role assignment section
    - name: Get directory roles
      uri:
        url: "{{ graph_api_endpoint }}/directoryRoles"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        return_content: yes
      register: roles_response
      when: create_user_response is defined and create_user_response.status in [200, 201]
